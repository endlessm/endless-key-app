--- "kolibri/utils/server.py" 2021-08-11 09:40:50.000000000 -0700
+++ "kolibri/utils/server.py" 2021-08-11 09:40:36.000000000 -0700
@@ -62,7 +62,7 @@
 DAEMON_LOG = os.path.join(conf.LOG_ROOT, "daemon.txt")

 # Currently non-configurable until we know how to properly handle this
-LISTEN_ADDRESS = "0.0.0.0"
+LISTEN_ADDRESS = "127.0.0.1"


 class NotRunning(Exception):
@@ -106,22 +106,22 @@
         scheduler.start_scheduler()

         # Register the Kolibri zeroconf service so it will be discoverable on the network
-        from kolibri.core.discovery.utils.network.search import (
-            register_zeroconf_service,
-        )
+        # from kolibri.core.discovery.utils.network.search import (
+        #     register_zeroconf_service,
+        # )

-        register_zeroconf_service(port=self.port)
+        # register_zeroconf_service(port=self.port)

     def stop(self):
         scheduler.shutdown_scheduler()
         if self.workers is not None:
             for worker in self.workers:
                 worker.shutdown()
-        from kolibri.core.discovery.utils.network.search import (
-            unregister_zeroconf_service,
-        )
+        # from kolibri.core.discovery.utils.network.search import (
+        #     unregister_zeroconf_service,
+        # )

-        unregister_zeroconf_service()
+        # unregister_zeroconf_service()

         if self.workers is not None:
             for worker in self.workers:
